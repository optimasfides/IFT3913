javaProjects\chart\editor\DefaultPolarPlotEditor.java
meth : createPlotTabs_Plot
LOC : 9
CLOC : 1
DC : 0.11111111
CC : 1
BC : 0.11111111

javaProjects\chart\JFreeChart.java
meth : clone
LOC : 27
CLOC : 3
DC : 0.11111111
CC : 1
BC : 0.11111111

javaProjects\chart\ChartUtils.java
meth : equal_double[][]_double[][]
LOC : 18
CLOC : 1
DC : 0.55555556
CC : 5
BC : 0.11111111

Ces Méthodes ont une complexité cyclomatique (CC) élevée, ce qui peut indiquer qu'elles sont plus complexes, plus lentes et moins efficaces. 
Ainsi, la métrique BC = DC/CC est très basse puisque la densité de commentaires de ces classes n'est pas assez haute pour compenser leurs CC élevés. 
Il est possible que certaines de ces valeurs CC élevées soient dues à des complexités accidentelles et non pas essentielles. 
Dans un tel cas, il faudrait simplifier ces méthodes le plus que possible ou utiliser des librairies moins inutilement lourdes sur la complexité. 
D'autre part, si les valeurs CC sont du à des complexités essentielles, il faudrait alors augmenter le nombre de commentaires (augmenter CLOC), 
pour ainsi augmenter la densité de commentaire (DC) et ainsi augmenter la valeur de BC qui indiquerait que la méthode est bien commentée.

